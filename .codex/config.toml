model = "gpt-5-codex"
# ~/.codex/config.toml  (or $CODEX_HOME/config.toml)

# Example: set your default trust level for the current project.
# Codex doesn't have nested per-project blocks; keep this file per project by using $CODEX_HOME.

[projects."/home/diepulp/projects/pt-2"]
trust_level = "trusted"


# --- MCP servers (stdio) ---

[mcp_servers.sequential_thinking]
command = "npx"
args = ["-y", "@modelcontextprotocol/server-sequential-thinking"]


#[mcp_servers.puppeteer]
#command = "npx"
#args    = ["-y", "@modelcontextprotocol/server-puppeteer"]

#[mcp_servers.magic]
#command = "npx"
#args    = ["-y", "@magicuidesign/mcp@latest"]

[mcp_servers.playwright]
command = "npx"
args = ["-y", "@playwright/mcp@latest"]

#[mcp_servers.supabase]
#command = "npx"
#args    = ["-y", "@supabase/mcp-server-supabase@latest", "--read-only", "--project-ref=vaicxfihdldgepzryhpd"]
# Prefer passing secrets via environment when launching Codex (see notes below)
## [mcp_servers.supabase.env]
##[mcp_servers.supabase.env]
SUPABASE_ACCESS_TOKEN = "${SUPABASE_ACCESS_TOKEN}"



[mcp_servers.filesystem]
command = "npx"
args    = ["-y", "@modelcontextprotocol/server-filesystem", "/home/diepulp/pt-1"]

# --- Context7 (HTTP/SSE) ---
# Codex can't talk HTTP/SSE MCP directly. Use an stdio<->SSE proxy like `mcp-proxy`.
# Replace the server below with the proxy invocation:
#   npm i -g mcp-proxy   # once

[mcp_servers.context7]
args = ["-y", "@upstash/context7-mcp"]
command = "npx"
# If the endpoint is plain SSE (not StreamableHTTP), drop the --transport flag.
# To add auth, use: ... "--headers", "Authorization", "Bearer <TOKEN>"

[mcp_servers.shadcn]
command = "npx"
args = ["-y", shadcn@latest", "mcp"]

#[mcp_servers.supabase]
#command = "npx"
#args    = ["-y", "@supabase/mcp-server-supabase@latest", "--read-only", "--project-ref=vaicxfihdldgepzryhpd"]
#Prefer passing secrets via environment when launching Codex (see notes below)
## [mcp_servers.supabase.env]
##[mcp_servers.supabase.env]
#SUPABASE_ACCESS_TOKEN = "${SUPABASE_ACCESS_TOKEN}"
